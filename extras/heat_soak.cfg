
################################
########### HEAT_SOAK ##########
################################
[gcode_macro HEAT_SOAK]
variable_output: 118
variable_bed_fans: False
variable_bed_fan_slow: 'BEDFANS_SLOW'
variable_bed_fan_fast: 'BEDFANS_FAST'
variable_bed_fan_off: 'BEDFANS_OFF'
variable_time_soak: False
variable_temp_soak: False
variable_chamber_time: 0
variable_chamber_temp: 0
variable_soak_time: 0
variable_chamber_type: 'temperature_sensor'
variable_chamber_name: 'chamber'
gcode:
    {% set chamber_temp = params.TEMP|float|default(0) %}
    {% set bed_temp = params.BED_TEMP|float|default(100) %}
    M{output} Preheating bed ; status feedback
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp} ; set bed temp
    {% if bed_fans == True %} ; if using bed fans
        {bed_fan_slow} ; slow speed bed fans
    {% endif %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp-1} MAXIMUM={bed_temp+5} ; wait for bed temp
    {% if bed_fans == True %} ; if using bed fans
        {bed_fan_fast} ; fast speed bed fans
    {% endif %}
    {% if time_soak == True %} ; if using a time soak
        M{output} "Soaking {chamber_time} minutes" ; status feedback
        ## Start timer
        UPDATE_DELAYED_GCODE ID=heat_soak_timer DURATION={chamber_time*60} ; start soak timer
        SET_IDLE_TIMEOUT TIMEOUT={soak_idle_time} ; set idle timeout to soak time
    {% endif %}
    {% if temp_soak == True %} ; if using a temperature soak
        {% if bed_fans == True %} ; if using bed fans
            {bed_fan_fast} ; fast speed bed fans
        {% endif %}
        M{output} {"Soaking until " + chamber_temp|string + "°C"} ; status feedback
        _set_chamber TEMP={chamber_temp} WAIT=true ; set chamber temp
        M{output} {"Soaking completed at " + chamber_temp|string + "°C"} ; status feedback
    {% endif %}
    {% if heat_soak_complete == 1 %} ; if heat soak complete
        {bed_fan_off} ; turn off bed fans
    {% endif %}

################################
######## Heat Soak Timer #######
################################
[delayed_gcode heat_soak_timer]
gcode:
    {% set soak_macro = printer['gcode_macro HEAT_SOAK'] %} ; get soak variables
    M{soak_macro.output} "Soaking completed after {chamber_time} minutes" ; status feedback
    {bed_fan_off} ; turn off bed fans

################################
###### CHAMBER CONTROL #########
################################
[gcode_macro _set_chamber]
gcode:
    {% set soak_macro = printer['gcode_macro HEAT_SOAK'] %} ; get soak variables
    {% set config = printer.configfile.settings %} ; get realtime configfile settings
    ## Parameters
    {% set TEMP = params.TEMP|default(0)|float %} ; chamber temperature
    {% set WAIT = params.WAIT|default('false')|lower %} ; wait for temperature
    {% set SPEED = params.SPEED|default(0)|float %} ; chamber fan speed
    {% set chamber = soak_macro.chamber_type + ' ' + soak_macro.chamber_name %} ; chamber sensor
    ## Determine chamber type
    {% if soak_macro.chamber_type == 'generic_fan' %} ; if using a generic_fan chamnber sensor type
        ## Set chamber fan speed
        SET_FAN_SPEED FAN={soak_macro.chamber_name} SPEED={SPEED} ; set chamber fan speed
    {% elif soak_macro.chamber_type == 'heater' %} ; if using a heater chamber sensor type
        ## Set chamber temperature
        SET_HEATER_TEMPERATURE HEATER={soak_macro.chamber_name} TARGET={TEMP} ; set chamber temperature
        {% if WAIT == 'true' %} ; if waiting for temperature
            ## Wait for chamber temperature
            TEMPERATURE_WAIT SENSOR={chamber} MINIMUM={TEMP} MAXIMUM={TEMP+25} ; wait for chamber temperature
        {% endif %}
    {% elif soak_macro.chamber_type == 'temperature_sensor' %} ; if using a temperature_sensor chamber sensor type
        {% if WAIT == 'true' %} ; if waiting for temperature
            ## Wait for chamber temperature
            TEMPERATURE_WAIT SENSOR='{chamber}' MINIMUM={TEMP} MAXIMUM={TEMP+25} ; wait for chamber temperature 
        {% endif %}
    {% endif %}

################################
[respond]